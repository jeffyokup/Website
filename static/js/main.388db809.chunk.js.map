{"version":3,"sources":["Home.js","Resume.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["Home","style","fontSize","float","Item","color","Resume","file","pageNumber","Content","Layout","Header","Footer","Sider","SubMenu","Menu","App","state","collapsed","onCollapse","console","log","setState","type","name","keyValue","key","to","minHeight","collapsible","this","className","theme","defaultSelectedKeys","mode","menuIcon","title","margin","exact","path","component","textAlign","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id"],"mappings":"ocA8BeA,MAtBf,WACE,OACE,6BACE,wBAAIC,MAAO,CAAEC,SAAU,KAAvB,mBACA,mFACA,yBAAKD,MAAO,CAAEE,MAAO,UACnB,2CACA,kBAAC,IAAD,KACE,kBAAC,IAASC,KAAV,oCACA,kBAAC,IAASA,KAAV,sCACA,kBAAC,IAASA,KAAV,uDAGA,kBAAC,IAASA,KAAV,iDAGA,kBAAC,IAASA,KAAV,CAAeC,MAAM,SAArB,iC,QCZKC,MATf,WACE,OACE,6BACE,kBAAC,WAAD,CAAUC,KAAK,yCACb,kBAAC,OAAD,CAAMC,WAAY,OCAVC,GAA2BC,IAAnCC,OAAmCD,IAA3BD,SAASG,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MACzBC,EAAYC,IAAZD,QAqEOE,E,2MAlEbC,MAAQ,CACNC,WAAW,G,EAGbC,WAAa,SAAAD,GACXE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAAEJ,e,wEAGTK,EAAMC,EAAMC,GACnB,OACE,kBAAC,IAAKrB,KAAN,CAAWsB,IAAKD,GACd,kBAAC,IAAD,CAAMF,KAAMA,IACZ,8BAAOC,GACP,kBAAC,IAAD,CAAMG,GAAI,IAAMH,O,+BAMpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQvB,MAAO,CAAE2B,UAAW,UAC1B,kBAACf,EAAD,CACEgB,aAAW,EACXX,UAAWY,KAAKb,MAAMC,UACtBC,WAAYW,KAAKX,YAEjB,yBAAKY,UAAU,SACf,kBAAC,IAAD,CAAMC,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,UACjDJ,KAAKK,SAAS,OAAQ,OAAQ,KAC9BL,KAAKK,SAAS,OAAQ,SAAU,KACjC,kBAACrB,EAAD,CACEY,IAAI,OACJU,MACE,8BACE,kBAAC,IAAD,CAAMb,KAAK,YACX,4CAIHO,KAAKK,SAAS,cAAe,iBAAkB,KAC/CL,KAAKK,SAAS,OAAQ,QAAS,MAEjCL,KAAKK,SAAS,SAAU,WAAY,OAGzC,kBAAC,IAAD,KACE,kBAAC1B,EAAD,CAASR,MAAO,CAAEoC,OAAQ,WACxB,6BACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWxC,IACrC,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,UAAUC,UAAWlC,IACvC,kBAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,kBAAkBC,UAAWxC,IAC/C,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,SAASC,UAAWxC,IACtC,kBAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,YAAYC,UAAWxC,MAG7C,kBAACY,EAAD,CAAQX,MAAO,CAAEwC,UAAW,WAA5B,iD,GA1DMC,IAAMC,WCEJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,iBEnInB,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K","file":"static/js/main.388db809.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Timeline, Icon } from \"antd\";\r\n\r\nconst titleStyle = {\r\n  color: \"red\"\r\n};\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h1 style={{ fontSize: 45 }}>Hi, I'm Jeffrey</h1>\r\n      <h2>I am an Iowa State Graduate and Computer Scientist </h2>\r\n      <div style={{ float: \"right\" }}>\r\n        <h3>My Timeline</h3>\r\n        <Timeline>\r\n          <Timeline.Item>First day at ISU 08-05-2016</Timeline.Item>\r\n          <Timeline.Item>Teachers Assistant 01-10-2017</Timeline.Item>\r\n          <Timeline.Item>\r\n            Software Engineer Intern at Cerner 05-015-2018\r\n          </Timeline.Item>\r\n          <Timeline.Item>\r\n            Resumed as Teachers Assistant 08-20-2018\r\n          </Timeline.Item>\r\n          <Timeline.Item color=\"green\">ISU Graduation 05-05-2019</Timeline.Item>\r\n        </Timeline>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nfunction Resume() {\r\n  return (\r\n    <div>\r\n      <Document file=\"../resources/Jeffrey_Yokup_Resume.pdf\">\r\n        <Page pageNumber={1} />\r\n      </Document>\r\n    </div>\r\n  );\r\n}\r\nexport default Resume;\r\n","import React from \"react\";\nimport { Layout, Menu, Icon } from \"antd\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Resume from \"./Resume\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass App extends React.Component {\n  state = {\n    collapsed: false\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  menuIcon(type, name, keyValue) {\n    return (\n      <Menu.Item key={keyValue}>\n        <Icon type={type} />\n        <span>{name}</span>\n        <Link to={\"/\" + name} />\n      </Menu.Item>\n    );\n  }\n\n  render() {\n    return (\n      <Router>\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <Sider\n            collapsible\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          >\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n              {this.menuIcon(\"home\", \"Home\", \"1\")}\n              {this.menuIcon(\"file\", \"Resume\", \"2\")}\n              <SubMenu\n                key=\"sub1\"\n                title={\n                  <span>\n                    <Icon type=\"project\" />\n                    <span>Projects</span>\n                  </span>\n                }\n              >\n                {this.menuIcon(\"file-search\", \"Chrome Project\", \"3\")}\n                {this.menuIcon(\"line\", \"Snake\", \"4\")}\n              </SubMenu>\n              {this.menuIcon(\"rocket\", \"Writings\", \"5\")}\n            </Menu>\n          </Sider>\n          <Layout>\n            <Content style={{ margin: \"0 16px\" }}>\n              <div>\n                <Route exact path=\"/Home\" component={Home} />\n                <Route exact path=\"/Resume\" component={Resume} />\n                <Route exact path=\"/Chrome Project\" component={Home} />\n                <Route exact path=\"/Snake\" component={Home} />\n                <Route exact path=\"/Writings\" component={Home} />\n              </div>\n            </Content>\n            <Footer style={{ textAlign: \"center\" }}>\n              Ant Design Â©2018 Created by Ant UED\n            </Footer>\n          </Layout>\n        </Layout>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;"],"sourceRoot":""}